<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- fileUpload -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" 		value="utf-8" />
		<beans:property name="maxUploadSize" 		value="-1" />
		<beans:property name="maxUploadSizePerFile" value="2097152" />
		<beans:property name="maxInMemorySize" 		value="10485756" />
		<beans:property name="uploadTempDir" 		value="file:/C:/upload/tmp" />
	</beans:bean>

	
	<!-- 
		<jsp:useBean > 동일한 역할 / 생성자 / set 호출 가능 
	 	<beans:constructor-arg /> 생성자  
	 	<beans:property name="" /> set 메서드호출 
	 -->
	<beans:bean id="memberDTO" class="org.mvc.bean.MemberDTO" />
	
	<beans:bean id="testDTO" class="org.mvc.bean.TestDTO"></beans:bean>	
	<beans:bean id="testDTO2" class="org.mvc.bean.TestDTO">
		<beans:constructor-arg value="hello" />
	</beans:bean>
	<beans:bean id="testDTO3" class="org.mvc.bean.TestDTO">
		<beans:constructor-arg value="hello" />
		<beans:constructor-arg value="100" />
	</beans:bean>
	
	<beans:bean id="day2" class="java.util.Date" />
	
	<beans:bean id="testDTO4" class="org.mvc.bean.TestDTO">
		<beans:constructor-arg ref="day2" />
		<beans:constructor-arg value="hello" />
	</beans:bean>
	
	<beans:bean id="testDTO5" class="org.mvc.bean.TestDTO">
		<beans:constructor-arg ref="day2" />
		<beans:constructor-arg value="hello" />
		<beans:property name="name" value="java" />
		<beans:property name="num"  value="55" />
		<beans:property name="day"  ref="day2" />
	</beans:bean>
	
	<context:component-scan base-package="org.mvc.controller" />
	
	<context:component-scan base-package="com.project.controller" />
	<context:component-scan base-package="com.security.controller" />
	
	<!-- 
	<context:component-scan base-package="org.mvc.exception" />
	-->
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<context:component-scan base-package="org.mvc.aop"></context:component-scan>
	<!--  
	<beans:bean id="advice" class="org.mvc.aop.LogXmlAdvice"></beans:bean>
	<beans:bean id="sessionCh" class="org.mvc.aop.SessionCheckAdvice"></beans:bean>
	<aop:config>
		<aop:pointcut expression="execution(*org.mvc.controller.Sample*.*(..))" id="pc1"/>
		<aop:pointcut expression="execution(*org.mvc.controller.Sample*.*(..))" id="pc2"/>
		<aop:aspect id="test" ref="sessionCh">
			 <aop:before method="before" pointcut-ref="pc1"/>
			 <aop:after method="after" pointcut-ref="pc1"/>
			<aop:around method="around" pointcut-ref="pc1"/>
		</aop:aspect>
	<aop:aspect id="test2" ref="sessionCh">
		<aop:around method="around" pointcut-ref="pc2" />	
	</aop:aspect>
	</aop:config>
	-->
</beans:beans>


















